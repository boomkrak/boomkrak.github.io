@import "_var.scss";

/* ------------------------------------------------------------------------------------
	Source:  http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
--------------------------------------------------------------------------------------*/
@mixin vertical-align($position: relative) {
	position: $position;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}



@mixin inline-block {
	display: -moz-inline-stack;
	display: inline-block;
	*zoom: 1;
	*display: inline;
}

/* ------------------------------------------------------------------------------------
	Source:  http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
--------------------------------------------------------------------------------------*/


// BREAKPOINT -----/
@mixin bp-large {
  @media only screen and (max-width: 80em) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

// OPACITY -----/
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/* ------------------------------------------------------------------------------------
	Source:  http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
	Ultimate PX to REM
--------------------------------------------------------------------------------------*/

html {
  font-size: 62.5%; /* 1 */
}

@function parseInt($n) { /* 2 */
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : (); /* 3 */
  $rem: (); /* 3 */

  @each $value in $values { /* 4 */

    @if $value == 0 or $value == auto { /* 5 */
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else {
      $unit: unit($value);    /* 6 */
      $val: parseInt($value); /* 6 */

      @if $unit == "px" {  /* 7 */
        $px : append($px,  $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" { /* 7 */
        $px : append($px,  ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {     /* 8 */
    #{$property}: $px;  /* 9 */
  } @else {
    #{$property}: $px;  /* 9 */
    #{$property}: $rem; /* 9 */
  }
}

//////
//
// Mixin - Animated Gradient Background
//
// @include background-gradient-animation(
//  rgba(255,255,255,0.4), // color one
//  rgba(255,255,255,1), // color two
//  rgba(255,255,255,0.4), // colour three
//  135deg, // background angle
//  30s, // length
//  infinite // iteration
// );
//
/////

@mixin background-gradient-animation($colour-one, $colour-two, $colour-three, $colour-four, $angle, $length, $iteration) {
  background: $colour-one;

  background: linear-gradient($angle, $colour-one 0%, $colour-two 45%, $colour-three 75%, $colour-four 100%);
  background-size: 500% 500%;
  animation: animation-background-gradient $length ease $iteration;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-align: center;
  margin: 0 auto;
}

//
// Animation - Background Gradient
//

@keyframes animation-background-gradient {
  0%{background-position:0% 99%}
  50%{background-position:100% 2%}
  100%{background-position:0% 99%}
}

